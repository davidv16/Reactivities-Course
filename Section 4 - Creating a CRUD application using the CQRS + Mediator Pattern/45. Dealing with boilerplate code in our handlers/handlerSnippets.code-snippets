{
"Query Handler": {
	"prefix": "qhandler",
	"body": [
		"        public class Query : IRequest<${1:ReturnObject}> { }",
		"",
		"        //handler of the type Irequest that takes in query and returns a list of activities",
		"        public class Handler : IRequestHandler<Query, ${1:ReturnObject}>",
		"        {",
		"            private readonly DataContext _context;",
		"",
		"            //constructor for getting in the datacontext from persistence",
		"            public Handler(DataContext context)",
		"            {",
		"                _context = context;",
		"",
		"            }",
		"",
		"            //the handler function",
		"            public async Task<${1:ReturnObject}> Handle(Query request,",
		"                CancellationToken cancellationToken)",
		"            {",
		"                //handler logic goes here",
		"            }",
		"        }"
	],
	"description": "Query Handler"
},
"Command Handler": {
	"prefix": "chandler",
	"body": [
		"public class Command : IRequest",
		"        {",
		"        }",
		"",
		"        public class Handler : IRequestHandler<Command>",
		"        {",
		"            private readonly DataContext _context;",
		"            public Handler(DataContext context)",
		"            {",
		"                _context = context;",
		"",
		"            }",
		"",
		"            public async Task<Unit> Handle(Command request, ",
		"                CancellationToken cancellationToken)",
		"            {",
		"",
		"",
		"                //send an asynchronus request with the data to the db",
		"                //if there were more than 0 new items saved then return an int value to success variable",
		"                var success = await _context.SaveChangesAsync() > 0;",
		"",
		"                //if success then return 200 response to controller",
		"                if(success) return Unit.Value;",
		"",
		"                //if unsuccessfull then return a problem message.",
		"                throw new System.Exception(\"Problem saving changes\");",
		"            }",
		"        }"
	],
	"description": "Command Handler"
}
}